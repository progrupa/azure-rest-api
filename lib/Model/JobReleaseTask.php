<?php
/**
 * JobReleaseTask
 *
 * PHP version 5
 *
 * @category Class
 * @package  Progrupa\Azure
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BatchService
 *
 * A client for issuing REST requests to the Azure Batch service.
 *
 * OpenAPI spec version: 2016-07-01.3.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Progrupa\Azure\Model;

use \ArrayAccess;

/**
 * JobReleaseTask Class Doc Comment
 *
 * @category    Class
 * @package     Progrupa\Azure
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class JobReleaseTask implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'JobReleaseTask';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'command_line' => 'string',
        'resource_files' => '\Progrupa\Azure\Model\ResourceFile[]',
        'environment_settings' => '\Progrupa\Azure\Model\EnvironmentSetting[]',
        'max_wall_clock_time' => 'string',
        'retention_time' => 'string',
        'run_elevated' => 'bool'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'command_line' => 'commandLine',
        'resource_files' => 'resourceFiles',
        'environment_settings' => 'environmentSettings',
        'max_wall_clock_time' => 'maxWallClockTime',
        'retention_time' => 'retentionTime',
        'run_elevated' => 'runElevated'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'command_line' => 'setCommandLine',
        'resource_files' => 'setResourceFiles',
        'environment_settings' => 'setEnvironmentSettings',
        'max_wall_clock_time' => 'setMaxWallClockTime',
        'retention_time' => 'setRetentionTime',
        'run_elevated' => 'setRunElevated'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'command_line' => 'getCommandLine',
        'resource_files' => 'getResourceFiles',
        'environment_settings' => 'getEnvironmentSettings',
        'max_wall_clock_time' => 'getMaxWallClockTime',
        'retention_time' => 'getRetentionTime',
        'run_elevated' => 'getRunElevated'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['command_line'] = isset($data['command_line']) ? $data['command_line'] : null;
        $this->container['resource_files'] = isset($data['resource_files']) ? $data['resource_files'] : null;
        $this->container['environment_settings'] = isset($data['environment_settings']) ? $data['environment_settings'] : null;
        $this->container['max_wall_clock_time'] = isset($data['max_wall_clock_time']) ? $data['max_wall_clock_time'] : null;
        $this->container['retention_time'] = isset($data['retention_time']) ? $data['retention_time'] : null;
        $this->container['run_elevated'] = isset($data['run_elevated']) ? $data['run_elevated'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        if ($this->container['command_line'] === null) {
            $invalid_properties[] = "'command_line' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['command_line'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     * @param string $id The ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters. If you do not specify this property, the Batch service assigns a default value of 'jobrelease'. No other task in the job can have the same id as the Job Release task. If you try to submit a task with the same id, the Batch service rejects the request with error code TaskIdSameAsJobReleaseTask; if you are calling the REST API directly, the HTTP status code is 409 (Conflict).
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets command_line
     * @return string
     */
    public function getCommandLine()
    {
        return $this->container['command_line'];
    }

    /**
     * Sets command_line
     * @param string $command_line The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux.
     * @return $this
     */
    public function setCommandLine($command_line)
    {
        $this->container['command_line'] = $command_line;

        return $this;
    }

    /**
     * Gets resource_files
     * @return \Progrupa\Azure\Model\ResourceFile[]
     */
    public function getResourceFiles()
    {
        return $this->container['resource_files'];
    }

    /**
     * Sets resource_files
     * @param \Progrupa\Azure\Model\ResourceFile[] $resource_files Files listed under this element are located in the task's working directory.
     * @return $this
     */
    public function setResourceFiles($resource_files)
    {
        $this->container['resource_files'] = $resource_files;

        return $this;
    }

    /**
     * Gets environment_settings
     * @return \Progrupa\Azure\Model\EnvironmentSetting[]
     */
    public function getEnvironmentSettings()
    {
        return $this->container['environment_settings'];
    }

    /**
     * Sets environment_settings
     * @param \Progrupa\Azure\Model\EnvironmentSetting[] $environment_settings
     * @return $this
     */
    public function setEnvironmentSettings($environment_settings)
    {
        $this->container['environment_settings'] = $environment_settings;

        return $this;
    }

    /**
     * Gets max_wall_clock_time
     * @return string
     */
    public function getMaxWallClockTime()
    {
        return $this->container['max_wall_clock_time'];
    }

    /**
     * Sets max_wall_clock_time
     * @param string $max_wall_clock_time
     * @return $this
     */
    public function setMaxWallClockTime($max_wall_clock_time)
    {
        $this->container['max_wall_clock_time'] = $max_wall_clock_time;

        return $this;
    }

    /**
     * Gets retention_time
     * @return string
     */
    public function getRetentionTime()
    {
        return $this->container['retention_time'];
    }

    /**
     * Sets retention_time
     * @param string $retention_time The default is infinite, i.e. the task directory will be retained until the compute node is removed or reimaged.
     * @return $this
     */
    public function setRetentionTime($retention_time)
    {
        $this->container['retention_time'] = $retention_time;

        return $this;
    }

    /**
     * Gets run_elevated
     * @return bool
     */
    public function getRunElevated()
    {
        return $this->container['run_elevated'];
    }

    /**
     * Sets run_elevated
     * @param bool $run_elevated The default value is false.
     * @return $this
     */
    public function setRunElevated($run_elevated)
    {
        $this->container['run_elevated'] = $run_elevated;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Progrupa\Azure\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Progrupa\Azure\ObjectSerializer::sanitizeForSerialization($this));
    }
}


