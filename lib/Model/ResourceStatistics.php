<?php
/**
 * ResourceStatistics
 *
 * PHP version 5
 *
 * @category Class
 * @package  Progrupa\Azure
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BatchService
 *
 * A client for issuing REST requests to the Azure Batch service.
 *
 * OpenAPI spec version: 2016-07-01.3.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Progrupa\Azure\Model;

use \ArrayAccess;

/**
 * ResourceStatistics Class Doc Comment
 *
 * @category    Class
 * @package     Progrupa\Azure
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ResourceStatistics implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'ResourceStatistics';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'start_time' => '\DateTime',
        'last_update_time' => '\DateTime',
        'avg_cpu_percentage' => 'double',
        'avg_memory_gi_b' => 'double',
        'peak_memory_gi_b' => 'double',
        'avg_disk_gi_b' => 'double',
        'peak_disk_gi_b' => 'double',
        'disk_read_i_ops' => 'int',
        'disk_write_i_ops' => 'int',
        'disk_read_gi_b' => 'double',
        'disk_write_gi_b' => 'double',
        'network_read_gi_b' => 'double',
        'network_write_gi_b' => 'double'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'start_time' => 'startTime',
        'last_update_time' => 'lastUpdateTime',
        'avg_cpu_percentage' => 'avgCPUPercentage',
        'avg_memory_gi_b' => 'avgMemoryGiB',
        'peak_memory_gi_b' => 'peakMemoryGiB',
        'avg_disk_gi_b' => 'avgDiskGiB',
        'peak_disk_gi_b' => 'peakDiskGiB',
        'disk_read_i_ops' => 'diskReadIOps',
        'disk_write_i_ops' => 'diskWriteIOps',
        'disk_read_gi_b' => 'diskReadGiB',
        'disk_write_gi_b' => 'diskWriteGiB',
        'network_read_gi_b' => 'networkReadGiB',
        'network_write_gi_b' => 'networkWriteGiB'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'start_time' => 'setStartTime',
        'last_update_time' => 'setLastUpdateTime',
        'avg_cpu_percentage' => 'setAvgCpuPercentage',
        'avg_memory_gi_b' => 'setAvgMemoryGiB',
        'peak_memory_gi_b' => 'setPeakMemoryGiB',
        'avg_disk_gi_b' => 'setAvgDiskGiB',
        'peak_disk_gi_b' => 'setPeakDiskGiB',
        'disk_read_i_ops' => 'setDiskReadIOps',
        'disk_write_i_ops' => 'setDiskWriteIOps',
        'disk_read_gi_b' => 'setDiskReadGiB',
        'disk_write_gi_b' => 'setDiskWriteGiB',
        'network_read_gi_b' => 'setNetworkReadGiB',
        'network_write_gi_b' => 'setNetworkWriteGiB'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'start_time' => 'getStartTime',
        'last_update_time' => 'getLastUpdateTime',
        'avg_cpu_percentage' => 'getAvgCpuPercentage',
        'avg_memory_gi_b' => 'getAvgMemoryGiB',
        'peak_memory_gi_b' => 'getPeakMemoryGiB',
        'avg_disk_gi_b' => 'getAvgDiskGiB',
        'peak_disk_gi_b' => 'getPeakDiskGiB',
        'disk_read_i_ops' => 'getDiskReadIOps',
        'disk_write_i_ops' => 'getDiskWriteIOps',
        'disk_read_gi_b' => 'getDiskReadGiB',
        'disk_write_gi_b' => 'getDiskWriteGiB',
        'network_read_gi_b' => 'getNetworkReadGiB',
        'network_write_gi_b' => 'getNetworkWriteGiB'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['start_time'] = isset($data['start_time']) ? $data['start_time'] : null;
        $this->container['last_update_time'] = isset($data['last_update_time']) ? $data['last_update_time'] : null;
        $this->container['avg_cpu_percentage'] = isset($data['avg_cpu_percentage']) ? $data['avg_cpu_percentage'] : null;
        $this->container['avg_memory_gi_b'] = isset($data['avg_memory_gi_b']) ? $data['avg_memory_gi_b'] : null;
        $this->container['peak_memory_gi_b'] = isset($data['peak_memory_gi_b']) ? $data['peak_memory_gi_b'] : null;
        $this->container['avg_disk_gi_b'] = isset($data['avg_disk_gi_b']) ? $data['avg_disk_gi_b'] : null;
        $this->container['peak_disk_gi_b'] = isset($data['peak_disk_gi_b']) ? $data['peak_disk_gi_b'] : null;
        $this->container['disk_read_i_ops'] = isset($data['disk_read_i_ops']) ? $data['disk_read_i_ops'] : null;
        $this->container['disk_write_i_ops'] = isset($data['disk_write_i_ops']) ? $data['disk_write_i_ops'] : null;
        $this->container['disk_read_gi_b'] = isset($data['disk_read_gi_b']) ? $data['disk_read_gi_b'] : null;
        $this->container['disk_write_gi_b'] = isset($data['disk_write_gi_b']) ? $data['disk_write_gi_b'] : null;
        $this->container['network_read_gi_b'] = isset($data['network_read_gi_b']) ? $data['network_read_gi_b'] : null;
        $this->container['network_write_gi_b'] = isset($data['network_write_gi_b']) ? $data['network_write_gi_b'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        if ($this->container['start_time'] === null) {
            $invalid_properties[] = "'start_time' can't be null";
        }
        if ($this->container['last_update_time'] === null) {
            $invalid_properties[] = "'last_update_time' can't be null";
        }
        if ($this->container['avg_cpu_percentage'] === null) {
            $invalid_properties[] = "'avg_cpu_percentage' can't be null";
        }
        if ($this->container['avg_memory_gi_b'] === null) {
            $invalid_properties[] = "'avg_memory_gi_b' can't be null";
        }
        if ($this->container['peak_memory_gi_b'] === null) {
            $invalid_properties[] = "'peak_memory_gi_b' can't be null";
        }
        if ($this->container['avg_disk_gi_b'] === null) {
            $invalid_properties[] = "'avg_disk_gi_b' can't be null";
        }
        if ($this->container['peak_disk_gi_b'] === null) {
            $invalid_properties[] = "'peak_disk_gi_b' can't be null";
        }
        if ($this->container['disk_read_i_ops'] === null) {
            $invalid_properties[] = "'disk_read_i_ops' can't be null";
        }
        if ($this->container['disk_write_i_ops'] === null) {
            $invalid_properties[] = "'disk_write_i_ops' can't be null";
        }
        if ($this->container['disk_read_gi_b'] === null) {
            $invalid_properties[] = "'disk_read_gi_b' can't be null";
        }
        if ($this->container['disk_write_gi_b'] === null) {
            $invalid_properties[] = "'disk_write_gi_b' can't be null";
        }
        if ($this->container['network_read_gi_b'] === null) {
            $invalid_properties[] = "'network_read_gi_b' can't be null";
        }
        if ($this->container['network_write_gi_b'] === null) {
            $invalid_properties[] = "'network_write_gi_b' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['start_time'] === null) {
            return false;
        }
        if ($this->container['last_update_time'] === null) {
            return false;
        }
        if ($this->container['avg_cpu_percentage'] === null) {
            return false;
        }
        if ($this->container['avg_memory_gi_b'] === null) {
            return false;
        }
        if ($this->container['peak_memory_gi_b'] === null) {
            return false;
        }
        if ($this->container['avg_disk_gi_b'] === null) {
            return false;
        }
        if ($this->container['peak_disk_gi_b'] === null) {
            return false;
        }
        if ($this->container['disk_read_i_ops'] === null) {
            return false;
        }
        if ($this->container['disk_write_i_ops'] === null) {
            return false;
        }
        if ($this->container['disk_read_gi_b'] === null) {
            return false;
        }
        if ($this->container['disk_write_gi_b'] === null) {
            return false;
        }
        if ($this->container['network_read_gi_b'] === null) {
            return false;
        }
        if ($this->container['network_write_gi_b'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets start_time
     * @return \DateTime
     */
    public function getStartTime()
    {
        return $this->container['start_time'];
    }

    /**
     * Sets start_time
     * @param \DateTime $start_time
     * @return $this
     */
    public function setStartTime($start_time)
    {
        $this->container['start_time'] = $start_time;

        return $this;
    }

    /**
     * Gets last_update_time
     * @return \DateTime
     */
    public function getLastUpdateTime()
    {
        return $this->container['last_update_time'];
    }

    /**
     * Sets last_update_time
     * @param \DateTime $last_update_time
     * @return $this
     */
    public function setLastUpdateTime($last_update_time)
    {
        $this->container['last_update_time'] = $last_update_time;

        return $this;
    }

    /**
     * Gets avg_cpu_percentage
     * @return double
     */
    public function getAvgCpuPercentage()
    {
        return $this->container['avg_cpu_percentage'];
    }

    /**
     * Sets avg_cpu_percentage
     * @param double $avg_cpu_percentage
     * @return $this
     */
    public function setAvgCpuPercentage($avg_cpu_percentage)
    {
        $this->container['avg_cpu_percentage'] = $avg_cpu_percentage;

        return $this;
    }

    /**
     * Gets avg_memory_gi_b
     * @return double
     */
    public function getAvgMemoryGiB()
    {
        return $this->container['avg_memory_gi_b'];
    }

    /**
     * Sets avg_memory_gi_b
     * @param double $avg_memory_gi_b
     * @return $this
     */
    public function setAvgMemoryGiB($avg_memory_gi_b)
    {
        $this->container['avg_memory_gi_b'] = $avg_memory_gi_b;

        return $this;
    }

    /**
     * Gets peak_memory_gi_b
     * @return double
     */
    public function getPeakMemoryGiB()
    {
        return $this->container['peak_memory_gi_b'];
    }

    /**
     * Sets peak_memory_gi_b
     * @param double $peak_memory_gi_b
     * @return $this
     */
    public function setPeakMemoryGiB($peak_memory_gi_b)
    {
        $this->container['peak_memory_gi_b'] = $peak_memory_gi_b;

        return $this;
    }

    /**
     * Gets avg_disk_gi_b
     * @return double
     */
    public function getAvgDiskGiB()
    {
        return $this->container['avg_disk_gi_b'];
    }

    /**
     * Sets avg_disk_gi_b
     * @param double $avg_disk_gi_b
     * @return $this
     */
    public function setAvgDiskGiB($avg_disk_gi_b)
    {
        $this->container['avg_disk_gi_b'] = $avg_disk_gi_b;

        return $this;
    }

    /**
     * Gets peak_disk_gi_b
     * @return double
     */
    public function getPeakDiskGiB()
    {
        return $this->container['peak_disk_gi_b'];
    }

    /**
     * Sets peak_disk_gi_b
     * @param double $peak_disk_gi_b
     * @return $this
     */
    public function setPeakDiskGiB($peak_disk_gi_b)
    {
        $this->container['peak_disk_gi_b'] = $peak_disk_gi_b;

        return $this;
    }

    /**
     * Gets disk_read_i_ops
     * @return int
     */
    public function getDiskReadIOps()
    {
        return $this->container['disk_read_i_ops'];
    }

    /**
     * Sets disk_read_i_ops
     * @param int $disk_read_i_ops
     * @return $this
     */
    public function setDiskReadIOps($disk_read_i_ops)
    {
        $this->container['disk_read_i_ops'] = $disk_read_i_ops;

        return $this;
    }

    /**
     * Gets disk_write_i_ops
     * @return int
     */
    public function getDiskWriteIOps()
    {
        return $this->container['disk_write_i_ops'];
    }

    /**
     * Sets disk_write_i_ops
     * @param int $disk_write_i_ops
     * @return $this
     */
    public function setDiskWriteIOps($disk_write_i_ops)
    {
        $this->container['disk_write_i_ops'] = $disk_write_i_ops;

        return $this;
    }

    /**
     * Gets disk_read_gi_b
     * @return double
     */
    public function getDiskReadGiB()
    {
        return $this->container['disk_read_gi_b'];
    }

    /**
     * Sets disk_read_gi_b
     * @param double $disk_read_gi_b
     * @return $this
     */
    public function setDiskReadGiB($disk_read_gi_b)
    {
        $this->container['disk_read_gi_b'] = $disk_read_gi_b;

        return $this;
    }

    /**
     * Gets disk_write_gi_b
     * @return double
     */
    public function getDiskWriteGiB()
    {
        return $this->container['disk_write_gi_b'];
    }

    /**
     * Sets disk_write_gi_b
     * @param double $disk_write_gi_b
     * @return $this
     */
    public function setDiskWriteGiB($disk_write_gi_b)
    {
        $this->container['disk_write_gi_b'] = $disk_write_gi_b;

        return $this;
    }

    /**
     * Gets network_read_gi_b
     * @return double
     */
    public function getNetworkReadGiB()
    {
        return $this->container['network_read_gi_b'];
    }

    /**
     * Sets network_read_gi_b
     * @param double $network_read_gi_b
     * @return $this
     */
    public function setNetworkReadGiB($network_read_gi_b)
    {
        $this->container['network_read_gi_b'] = $network_read_gi_b;

        return $this;
    }

    /**
     * Gets network_write_gi_b
     * @return double
     */
    public function getNetworkWriteGiB()
    {
        return $this->container['network_write_gi_b'];
    }

    /**
     * Sets network_write_gi_b
     * @param double $network_write_gi_b
     * @return $this
     */
    public function setNetworkWriteGiB($network_write_gi_b)
    {
        $this->container['network_write_gi_b'] = $network_write_gi_b;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Progrupa\Azure\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Progrupa\Azure\ObjectSerializer::sanitizeForSerialization($this));
    }
}


